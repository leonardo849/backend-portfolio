name: Go test

on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev, main]

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:latest
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: admin
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install mongosh
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg wget
          wget -qO- https://www.mongodb.org/static/pgp/server-7.0.asc | sudo tee /etc/apt/trusted.gpg.d/server-7.0.asc
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
          mongosh --version

      # - name: Wait for MongoDB service to be healthy
      #   run: |
      #     for i in {1..30}; do
      #       if mongo --host mongo -u admin -p admin --authenticationDatabase admin --eval "db.adminCommand('ping')" > /dev/null 2>&1; then
      #         echo "MongoDB is up!"
      #         exit 0
      #       fi
      #       echo "Waiting for MongoDB..."
      #       sleep 2
      #     done
      #     echo "MongoDB did not start in time"
      #     exit 1

      - name: Initialize MongoDB
        run: |
          mongo --host mongo -u admin -p admin --authenticationDatabase admin <<EOF
            db = db.getSiblingDB('APP-DB');
            db.createUser({ user: 'APP-USERNAME', pwd: 'APP-PASSWORD', roles: [{ role: 'readWrite', db: 'APP-DB' }] });
            db.createCollection('APP-COLLECTION');
          EOF

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        env:
          URI_DB: mongodb://admin:admin@mongo:27017
          APP_ENV: PROD
          DATABASE_NAME: portfolio
          PASSWORD_ADMIN: "12345678"
          PORT: "8080"
          SECRET: "MESSIISTHEBESTPLAYEROFTHEWORLD"
        run: go test ./... -v
